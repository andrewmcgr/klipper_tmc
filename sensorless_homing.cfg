# Homing macros

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2240 stepper_y'].run_current|float %}
    {% set SGT = printer["gcode_macro config_tmc_global"].x_sgt|int %}
    {% set SG4 = printer["gcode_macro config_tmc_global"].x_sg4|int %}
    {% set HOME_CURRENT = 0.7 %}

    _config_tmc_xy_home CURRENT={HOME_CURRENT} RUN_CURRENT={RUN_CURRENT_X} SGT={SGT} SG4={SG4}

    # Home
    G28 X

    # Set current during print
    _config_tmc_xy_run CURRENT={RUN_CURRENT_X} SGT={SGT} SG4={SG4}

    # Pause for AT1
    G4 P150

    # Move away
    G91
    G1 X-20 F1200
    G90

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P700



[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2240 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    {% set SGT = printer["gcode_macro config_tmc_global"].y_sgt|int %}
    {% set SG4 = printer["gcode_macro config_tmc_global"].y_sg4|int %}
    _config_tmc_xy_home CURRENT={HOME_CURRENT} SGT={SGT} SG4={SG4}

    # Home
    G28 Y

    # Set current during print
    _config_tmc_xy_run CURRENT={RUN_CURRENT_X} SGT={SGT} SG4={SG4}

    # Pause for AT1
    G4 P150

    # Move away
    G91
    G1 Y-20 F1200
    G90

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P700


[homing_override]
set_position_z:10
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% set RUN_CURRENT = printer.configfile.settings['tmc2240 stepper_x'].run_current|float %}
  {% set M = printer["gcode_macro config_tmc_global"].xy_motor %}
  # only save calculations the first time
  _configure_tmc_autotune SAVE=1 S=stepper_x MOTOR={M} C={RUN_CURRENT}
  _configure_tmc_autotune SAVE=0 S=stepper_y MOTOR={M} C={RUN_CURRENT}
  # Do this for the extruder while we're here
  {% if printer["gcode_macro config_tmc_global"].extruder_motor is defined %}
    {% set E = printer["gcode_macro config_tmc_global"].extruder_motor %}
    _configure_tmc_autotune SAVE=0 S=extruder MOTOR={E}
  {% endif %}
  {% if printer["gcode_macro config_tmc_global"].z_motor is defined %}
    {% set Z = printer["gcode_macro config_tmc_global"].z_motor %}
    _configure_tmc_autotune SAVE=0 S=stepper_z MOTOR={Z}
    {% if printer.configfile.settings['stepper_Z1'] is defined %}
      _configure_tmc_autotune SAVE=0 S=stepper_z1 MOTOR={Z}
    {% endif %}
    {% if printer.configfile.settings['stepper_Z2'] is defined %}
      _configure_tmc_autotune SAVE=0 S=stepper_z2 MOTOR={Z}
    {% endif %}
    {% if printer.configfile.settings['stepper_Z3'] is defined %}
      _configure_tmc_autotune SAVE=0 S=stepper_z3 MOTOR={Z}
    {% endif %}
  {% endif %}
  G91
  G1 Z20 F600
  G90

  {% if home_all or 'X' in params or 'Z' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params or 'Z' in params %}
    _HOME_Y
  {% endif %}

  # Make certain the first move is slowish by doing this even if we won't home Z.
  {% set zprobe_x = printer["gcode_macro config_tmc_global"].zprobe_x|int %}
  {% set zprobe_y = printer["gcode_macro config_tmc_global"].zprobe_y|int %}
  G0 X{zprobe_x} Y{zprobe_y} F3600

  {% if home_all or 'Z' in params %}
    G28 Z
    G1 Z10
  {% endif %}

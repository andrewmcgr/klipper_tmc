[gcode_macro _configure_tmc_autotune]
gcode:
  {% if printer.configfile.settings['tmc2240 '+params.S] is defined %}
    {% set drv = printer.configfile.settings['tmc2240 '+params.S] %}
  {% endif %}
  {% if printer.configfile.settings['tmc2209 '+params.S] is defined %}
    {% set drv = printer.configfile.settings['tmc2209 '+params.S] %}
  {% endif %}
  {% set M = params.MOTOR|default("ldo-42sth48-2004mah") %}
  {% set d = printer["gcode_macro _motor_data"].motors[M] %}
  # Coil resistance, Ohms
  {% set R = d["R"] %}
  # Coil inductance, Henries
  {% set L = d["L"] %}
  # Holding torque, Newton-meters
  {% set T = d["T"] %}
  # Coil current, nominal, Amps
  {% set I =  params.C | default(d["I"]) |float %}

  # steps per revolution
  {% set steps = d["S"] %}
  # drive voltage
  {% set V = params.V|default(24.0)|float %}
  # clock frequency, all current devices use internal clock at 12.5 MHz
  {% set fclk = 12.5e6 %}

  _tmc_respond MSG="TMC autotune for {params.S}, motor {M}, {V} V, {I} A."

  {% set cbemf = T / (2 * I) %}
  {% set pwmgrad = (cbemf * 2 * 3.141 * fclk  * 1.46 / (24 * 256 * steps)) |int %}
  {% set pwmofs = (374 * R * L / V) |int %}

  SET_TMC_FIELD STEPPER={params.S} FIELD=PWM_AUTOGRAD VALUE=1
  SET_TMC_FIELD STEPPER={params.S} FIELD=PWM_AUTOSCALE VALUE=1
  SET_TMC_FIELD STEPPER={params.S} FIELD=PWM_GRAD VALUE={ pwmgrad }
  SET_TMC_FIELD STEPPER={params.S} FIELD=PWM_OFS VALUE={ pwmofs }
  _tmc_respond MSG="PWM_GRAD={pwmgrad}, PWM_OFS={pwmofs}"

  # Calculate Steathchop threshold, 1/6 of the speed where PWM maxes out
  {% set rdist = printer.configfile.settings[params.S].rotation_distance %}
  {% set sc_thrs = (255 - pwmofs) * rdist / (8 * 3.141 * pwmgrad) %}

  # Coolstep threshold is Stealthchop threshold plus 25%
  {% set cs_thrs = 1.25 * sc_thrs %}
  # fullstep threshold is Stealthchop threshold times 5, which is 5/6 of the PWM max
  {% set fs_thrs = 6 * sc_thrs %}

  _tmc_respond MSG="Stealthchop threshold {sc_thrs} mm/s"
  _tmc_respond MSG="Coolstep threshold {cs_thrs} mm/s"
  {% if printer.configfile.settings['tmc2240 '+params.S] is defined %}
    _tmc_respond MSG="Fullstep threshold {fs_thrs} mm/s"
  {% endif %}

  {% if params.SAVE %}
    SET_GCODE_VARIABLE MACRO=config_tmc_global VARIABLE=vsc VALUE={sc_thrs}
    SET_GCODE_VARIABLE MACRO=config_tmc_global VARIABLE=vcool VALUE={cs_thrs}
    SET_GCODE_VARIABLE MACRO=config_tmc_global VARIABLE=vhigh VALUE={fs_thrs}
  {% endif %}

  {% if drv is defined %}
    {% set tbl = drv.driver_tbl |int %}
    _tmc_respond MSG="tbl={tbl}"
    {% set tblank = 16 * (1.5 ** tbl) / fclk %}
    _tmc_respond MSG="tblank={tblank}"
    {% set toff = drv.driver_toff |int %}
    _tmc_respond MSG="toff={toff}"
    {% set tsd = (12 + 32 * toff) / fclk %}
    _tmc_respond MSG="tsd={tsd}"
    {% set dcoilblank = V * tblank / L %}
    _tmc_respond MSG="dcoilblank={dcoilblank}"
    {% set dcoilsd = R * I * 2 * tsd / L %}
    _tmc_respond MSG="dcoilsd={dcoilsd}"
    {% set hstartmin = 0.5 + ((dcoilblank + dcoilsd) * 2 * 248 * 32 / I) / 32 - 8 %}
    {% set hstartmin = ((hstartmin if hstartmin > -2 else -2) + 0.5) | int %}
    _tmc_respond MSG="Hysteresis minimum is {hstartmin}"
    {% set hstrt = hstartmin if hstartmin < 8 else 8 %}
    {% set hstrt = hstrt if hstrt > 1 else 1 %}
    {% set hend = hstartmin - hstrt %}
    {% set hend = hend if hend < 12 else 12 %}
    {% set hstrt = hstrt - 1 %}
    {% set hend = hend + 3 %}
    _tmc_respond MSG="HSTRT={hstrt}, HEND={hend}"
    SET_TMC_FIELD STEPPER={params.S} FIELD=HSTRT VALUE={ hstrt | int }
    SET_TMC_FIELD STEPPER={params.S} FIELD=HEND VALUE={ hend | int }
  {% endif %}

[gcode_macro _config_tmc]
gcode:
  SET_TMC_CURRENT STEPPER={params.S} CURRENT={params.C}
  SET_TMC_FIELD STEPPER={params.S} FIELD=en_pwm_mode VALUE={params.P}
  SET_TMC_FIELD STEPPER={params.S} FIELD=TPWMTHRS VELOCITY={params.SC}
  SET_TMC_FIELD STEPPER={params.S} FIELD=TCOOLTHRS VELOCITY={params.VC}
  SET_TMC_FIELD STEPPER={params.S} FIELD=THIGH VELOCITY={params.VH}
  SET_TMC_FIELD STEPPER={params.S} FIELD=SGT VALUE={params.SGT}
  SET_TMC_FIELD STEPPER={params.S} FIELD=SG4_THRS VALUE={params.SG4}
  # DUMP_TMC STEPPER={params.S}


[gcode_macro _config_tmc_xy]
gcode:
    _config_tmc S=stepper_x P={params.P} SC={params.SC} VC={params.VC} VH={params.VH} C={params.C} SGT={params.SGT} SG4={params.SG4}
    _config_tmc S=stepper_y P={params.P} SC={params.SC} VC={params.VC} VH={params.VH} C={params.C} SGT={params.SGT} SG4={params.SG4}

[gcode_macro _config_tmc_xy_home]
gcode:
    _config_tmc_xy P=0 SC=0 VC=0 VH=0 C={params.CURRENT} SGT={params.SGT} SG4={params.SG4}

[gcode_macro _config_tmc_xy_run]
variable_pwm_mode: 1
gcode:
    # Don't configure autotune again, we should already be tuned and do not want to reset that.
    {% set cfg = printer["gcode_macro config_tmc_global"] %}
    {% set P = cfg.pwm_mode %}
    {% set SC = cfg.vsc %}
    {% set VC = cfg.vcool %}
    {% set VH = cfg.vhigh %}
    _config_tmc_xy P={P} SC={SC} VC={VC} VH={VH} C={params.CURRENT} SGT={params.SGT} SG4={params.SG4}


[gcode_macro _tmc_respond]
gcode:
  {% if printer["gcode_macro config_tmc_global"].verbose|int %}
    RESPOND PREFIX=TMC MSG="{params.MSG}"
  {% endif %}

